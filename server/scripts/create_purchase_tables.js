const db = require('../config/database');

const createPurchaseTables = async () => {
  try {
    console.log('üîÑ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –∑–∞–∫—É–ø–æ–∫...');

    // –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã —Å–ø–∏—Å–∫–æ–≤ –∑–∞–∫—É–ø–æ–∫
    await db.query(`
      CREATE TABLE IF NOT EXISTS purchase_lists (
        id SERIAL PRIMARY KEY,
        order_id INTEGER REFERENCES orders(id) ON DELETE CASCADE,
        name VARCHAR(255) NOT NULL,
        status VARCHAR(50) DEFAULT 'pending' CHECK (status IN ('pending', 'in_progress', 'completed', 'cancelled')),
        total_cost DECIMAL(12,2) DEFAULT 0,
        created_by INTEGER REFERENCES users(id),
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        notes TEXT
      )
    `);

    console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ purchase_lists —Å–æ–∑–¥–∞–Ω–∞');

    // –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –ø–æ–∑–∏—Ü–∏–π —Å–ø–∏—Å–∫–∞ –∑–∞–∫—É–ø–æ–∫
    await db.query(`
      CREATE TABLE IF NOT EXISTS purchase_list_items (
        id SERIAL PRIMARY KEY,
        purchase_list_id INTEGER REFERENCES purchase_lists(id) ON DELETE CASCADE,
        material_id INTEGER REFERENCES materials(id) ON DELETE CASCADE,
        material_name VARCHAR(255) NOT NULL,
        required_quantity DECIMAL(10,2) NOT NULL,
        available_quantity DECIMAL(10,2) DEFAULT 0,
        missing_quantity DECIMAL(10,2) NOT NULL,
        unit VARCHAR(50) NOT NULL,
        unit_price DECIMAL(10,2) DEFAULT 0,
        total_price DECIMAL(12,2) DEFAULT 0,
        supplier VARCHAR(255),
        notes TEXT,
        status VARCHAR(50) DEFAULT 'pending' CHECK (status IN ('pending', 'ordered', 'received', 'cancelled')),
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
      )
    `);

    console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ purchase_list_items —Å–æ–∑–¥–∞–Ω–∞');

    // –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–∑–≤–ª–µ—á–µ–Ω–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –∏–∑ –∑–∞–∫–∞–∑–æ–≤
    await db.query(`
      CREATE TABLE IF NOT EXISTS order_materials (
        id SERIAL PRIMARY KEY,
        order_id INTEGER REFERENCES orders(id) ON DELETE CASCADE,
        material_name VARCHAR(255) NOT NULL,
        required_quantity DECIMAL(10,2) NOT NULL,
        unit VARCHAR(50) NOT NULL,
        estimated_price DECIMAL(10,2) DEFAULT 0,
        source VARCHAR(50) DEFAULT 'calculator' CHECK (source IN ('calculator', 'manual', 'bom')),
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
      )
    `);

    console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ order_materials —Å–æ–∑–¥–∞–Ω–∞');

    // –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤
    await db.query(`
      CREATE INDEX IF NOT EXISTS idx_purchase_lists_order_id ON purchase_lists(order_id)
    `);
    await db.query(`
      CREATE INDEX IF NOT EXISTS idx_purchase_lists_status ON purchase_lists(status)
    `);
    await db.query(`
      CREATE INDEX IF NOT EXISTS idx_purchase_list_items_purchase_list_id ON purchase_list_items(purchase_list_id)
    `);
    await db.query(`
      CREATE INDEX IF NOT EXISTS idx_purchase_list_items_material_id ON purchase_list_items(material_id)
    `);
    await db.query(`
      CREATE INDEX IF NOT EXISTS idx_order_materials_order_id ON order_materials(order_id)
    `);

    console.log('‚úÖ –ò–Ω–¥–µ–∫—Å—ã —Å–æ–∑–¥–∞–Ω—ã');
    console.log('üéâ –í—Å–µ —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –∑–∞–∫—É–ø–æ–∫ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–∞–±–ª–∏—Ü:', error);
    throw error;
  }
};

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
createPurchaseTables()
  .then(() => {
    console.log('‚úÖ –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ');
    process.exit(0);
  })
  .catch((error) => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞:', error);
    process.exit(1);
  });






