const { Pool } = require('pg');
require('dotenv').config();

const pool = new Pool({
  user: process.env.DB_USER,
  host: process.env.DB_HOST,
  database: process.env.DB_NAME,
  password: process.env.DB_PASSWORD,
  port: process.env.DB_PORT,
});

const employees = [
  // –ö–ë
  {
    first_name: '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä',
    last_name: '–ü–µ—Ç—Ä–æ–≤',
    middle_name: '–í–ª–∞–¥–∏–º–∏—Ä–æ–≤–∏—á',
    department: '–ö–ë',
    position: '–¢–µ—Ö–Ω–æ–ª–æ–≥',
    employee_number: '001',
    phone: '+7 (495) 123-45-67',
    email: 'a.petrov@sofany.ru',
    hire_date: '2020-01-15'
  },
  {
    first_name: '–ï–ª–µ–Ω–∞',
    last_name: '–°–∏–¥–æ—Ä–æ–≤–∞',
    middle_name: '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–Ω–∞',
    department: '–ö–ë',
    position: '–î–∏–∑–∞–π–Ω–µ—Ä',
    employee_number: '002',
    phone: '+7 (495) 123-45-68',
    email: 'e.sidorova@sofany.ru',
    hire_date: '2021-03-10'
  },
  {
    first_name: '–ú–∏—Ö–∞–∏–ª',
    last_name: '–ö–æ–∑–ª–æ–≤',
    middle_name: '–ò–≥–æ—Ä–µ–≤–∏—á',
    department: '–ö–ë',
    position: '–ú–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞',
    employee_number: '003',
    phone: '+7 (495) 123-45-69',
    email: 'm.kozlov@sofany.ru',
    hire_date: '2019-06-01'
  },

  // –°—Ç–æ–ª—è—Ä–Ω—ã–π —Ü–µ—Ö
  {
    first_name: '–ò–≤–∞–Ω',
    last_name: '–°–º–∏—Ä–Ω–æ–≤',
    middle_name: '–ü–µ—Ç—Ä–æ–≤–∏—á',
    department: '–°—Ç–æ–ª—è—Ä–Ω—ã–π —Ü–µ—Ö',
    position: '–ú–∞—Å—Ç–µ—Ä —Å—Ç–æ–ª—è—Ä–Ω–æ–≥–æ —Ü–µ—Ö–∞',
    employee_number: '101',
    phone: '+7 (495) 123-45-70',
    email: 'i.smirnov@sofany.ru',
    hire_date: '2018-09-15'
  },
  {
    first_name: '–°–µ—Ä–≥–µ–π',
    last_name: '–í–∞—Å–∏–ª—å–µ–≤',
    middle_name: '–ê–Ω–¥—Ä–µ–µ–≤–∏—á',
    department: '–°—Ç–æ–ª—è—Ä–Ω—ã–π —Ü–µ—Ö',
    position: '–°—Ç–æ–ª—è—Ä',
    employee_number: '102',
    phone: '+7 (495) 123-45-71',
    email: 's.vasiliev@sofany.ru',
    hire_date: '2020-02-20'
  },
  {
    first_name: '–î–º–∏—Ç—Ä–∏–π',
    last_name: '–ü–æ–ø–æ–≤',
    middle_name: '–°–µ—Ä–≥–µ–µ–≤–∏—á',
    department: '–°—Ç–æ–ª—è—Ä–Ω—ã–π —Ü–µ—Ö',
    position: '–ö—Ä–æ–º—â–∏–∫',
    employee_number: '103',
    phone: '+7 (495) 123-45-72',
    email: 'd.popov@sofany.ru',
    hire_date: '2021-05-10'
  },
  {
    first_name: '–ê–Ω–¥—Ä–µ–π',
    last_name: '–°–æ–∫–æ–ª–æ–≤',
    middle_name: '–î–º–∏—Ç—Ä–∏–µ–≤–∏—á',
    department: '–°—Ç–æ–ª—è—Ä–Ω—ã–π —Ü–µ—Ö',
    position: '–°–±–æ—Ä—â–∏–∫',
    employee_number: '104',
    phone: '+7 (495) 123-45-73',
    email: 'a.sokolov@sofany.ru',
    hire_date: '2022-01-15'
  },
  {
    first_name: '–ù–∏–∫–æ–ª–∞–π',
    last_name: '–õ–µ–±–µ–¥–µ–≤',
    middle_name: '–ê–Ω–¥—Ä–µ–µ–≤–∏—á',
    department: '–°—Ç–æ–ª—è—Ä–Ω—ã–π —Ü–µ—Ö',
    position: '–ü–æ–º–æ—â–Ω–∏–∫ —Å—Ç–æ–ª—è—Ä–∞',
    employee_number: '105',
    phone: '+7 (495) 123-45-74',
    email: 'n.lebedev@sofany.ru',
    hire_date: '2022-08-01'
  },

  // –û–±–∏–≤–æ—á–Ω—ã–π —Ü–µ—Ö
  {
    first_name: '–û–ª—å–≥–∞',
    last_name: '–ù–æ–≤–∏–∫–æ–≤–∞',
    middle_name: '–ò–≤–∞–Ω–æ–≤–Ω–∞',
    department: '–û–±–∏–≤–æ—á–Ω—ã–π —Ü–µ—Ö',
    position: '–ú–∞—Å—Ç–µ—Ä –æ–±–∏–≤–∫–∏',
    employee_number: '201',
    phone: '+7 (495) 123-45-75',
    email: 'o.novikova@sofany.ru',
    hire_date: '2019-04-12'
  },
  {
    first_name: '–¢–∞—Ç—å—è–Ω–∞',
    last_name: '–ú–æ—Ä–æ–∑–æ–≤–∞',
    middle_name: '–°–µ—Ä–≥–µ–µ–≤–Ω–∞',
    department: '–û–±–∏–≤–æ—á–Ω—ã–π —Ü–µ—Ö',
    position: '–û–±–∏–≤—â–∏–∫',
    employee_number: '202',
    phone: '+7 (495) 123-45-76',
    email: 't.morozova@sofany.ru',
    hire_date: '2020-07-20'
  },
  {
    first_name: '–ù–∞—Ç–∞–ª—å—è',
    last_name: '–í–æ–ª–∫–æ–≤–∞',
    middle_name: '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–Ω–∞',
    department: '–û–±–∏–≤–æ—á–Ω—ã–π —Ü–µ—Ö',
    position: '–û–±–∏–≤—â–∏–∫',
    employee_number: '203',
    phone: '+7 (495) 123-45-77',
    email: 'n.volkova@sofany.ru',
    hire_date: '2021-11-05'
  },

  // –®–≤–µ–π–Ω—ã–π —Ü–µ—Ö
  {
    first_name: '–ú–∞—Ä–∏—è',
    last_name: '–ê–ª–µ–∫—Å–µ–µ–≤–∞',
    middle_name: '–ü–µ—Ç—Ä–æ–≤–Ω–∞',
    department: '–®–≤–µ–π–Ω—ã–π —Ü–µ—Ö',
    position: '–®–≤–µ—è',
    employee_number: '301',
    phone: '+7 (495) 123-45-78',
    email: 'm.alekseeva@sofany.ru',
    hire_date: '2020-03-15'
  },
  {
    first_name: '–ê–Ω–Ω–∞',
    last_name: '–°—Ç–µ–ø–∞–Ω–æ–≤–∞',
    middle_name: '–í–ª–∞–¥–∏–º–∏—Ä–æ–≤–Ω–∞',
    department: '–®–≤–µ–π–Ω—ã–π —Ü–µ—Ö',
    position: '–®–≤–µ—è',
    employee_number: '302',
    phone: '+7 (495) 123-45-79',
    email: 'a.stepanova@sofany.ru',
    hire_date: '2021-09-10'
  },

  // –§–æ—Ä–º–æ–≤–æ—á–Ω—ã–π —Ü–µ—Ö
  {
    first_name: '–í–ª–∞–¥–∏–º–∏—Ä',
    last_name: '–ö—É–∑–Ω–µ—Ü–æ–≤',
    middle_name: '–ù–∏–∫–æ–ª–∞–µ–≤–∏—á',
    department: '–§–æ—Ä–º–æ–≤–æ—á–Ω—ã–π —Ü–µ—Ö',
    position: '–§–æ—Ä–º–æ–≤—â–∏–∫ –ü–ü–£',
    employee_number: '401',
    phone: '+7 (495) 123-45-80',
    email: 'v.kuznetsov@sofany.ru',
    hire_date: '2020-06-01'
  },
  {
    first_name: '–ê–ª–µ–∫—Å–µ–π',
    last_name: '–û—Ä–ª–æ–≤',
    middle_name: '–í–ª–∞–¥–∏–º–∏—Ä–æ–≤–∏—á',
    department: '–§–æ—Ä–º–æ–≤–æ—á–Ω—ã–π —Ü–µ—Ö',
    position: '–§–æ—Ä–º–æ–≤—â–∏–∫ –ü–ü–£',
    employee_number: '402',
    phone: '+7 (495) 123-45-81',
    email: 'a.orlov@sofany.ru',
    hire_date: '2021-12-15'
  },

  // –†–∞–∑–Ω–æ—Ä–∞–±–æ—á–∏–π
  {
    first_name: '–ü–µ—Ç—Ä',
    last_name: '–°–µ–º–µ–Ω–æ–≤',
    middle_name: '–ò–≤–∞–Ω–æ–≤–∏—á',
    department: '–†–∞–∑–Ω–æ—Ä–∞–±–æ—á–∏–π',
    position: '–ì—Ä—É–∑—á–∏–∫',
    employee_number: '501',
    phone: '+7 (495) 123-45-82',
    email: 'p.semenov@sofany.ru',
    hire_date: '2022-02-01'
  },
  {
    first_name: '–†–æ–º–∞–Ω',
    last_name: '–ì—Ä–∏–≥–æ—Ä—å–µ–≤',
    middle_name: '–ê–Ω–¥—Ä–µ–µ–≤–∏—á',
    department: '–†–∞–∑–Ω–æ—Ä–∞–±–æ—á–∏–π',
    position: '–ü–æ–¥—Å–æ–±–Ω—ã–π —Ä–∞–±–æ—á–∏–π',
    employee_number: '502',
    phone: '+7 (495) 123-45-83',
    email: 'r.grigoriev@sofany.ru',
    hire_date: '2022-05-20'
  }
];

async function seedEmployees() {
  try {
    console.log('üå± –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º–∏...');

    // –ü–æ–ª—É—á–∞–µ–º ID –æ—Ç–¥–µ–ª–æ–≤ –∏ –¥–æ–ª–∂–Ω–æ—Å—Ç–µ–π
    const departmentsResult = await pool.query('SELECT id, name FROM departments');
    const positionsResult = await pool.query('SELECT id, name, department_id FROM positions');
    
    const departmentMap = {};
    departmentsResult.rows.forEach(dept => {
      departmentMap[dept.name] = dept.id;
    });

    const positionMap = {};
    positionsResult.rows.forEach(pos => {
      positionMap[`${pos.name}_${pos.department_id}`] = pos.id;
    });

    let successCount = 0;
    let errorCount = 0;

    for (const employee of employees) {
      try {
        const departmentId = departmentMap[employee.department];
        if (!departmentId) {
          console.log(`‚ùå –û—Ç–¥–µ–ª "${employee.department}" –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ ${employee.last_name}`);
          errorCount++;
          continue;
        }

        const positionId = positionMap[`${employee.position}_${departmentId}`];
        if (!positionId) {
          console.log(`‚ùå –î–æ–ª–∂–Ω–æ—Å—Ç—å "${employee.position}" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –¥–ª—è –æ—Ç–¥–µ–ª–∞ "${employee.department}"`);
          errorCount++;
          continue;
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ —Å —Ç–∞–∫–∏–º —Ç–∞–±–µ–ª—å–Ω—ã–º –Ω–æ–º–µ—Ä–æ–º
        const existingEmployee = await pool.query(
          'SELECT id FROM employees WHERE employee_number = $1',
          [employee.employee_number]
        );

        if (existingEmployee.rows.length > 0) {
          console.log(`‚ö†Ô∏è  –°–æ—Ç—Ä—É–¥–Ω–∏–∫ —Å —Ç–∞–±–µ–ª—å–Ω—ã–º –Ω–æ–º–µ—Ä–æ–º ${employee.employee_number} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
          continue;
        }

        await pool.query(`
          INSERT INTO employees (
            first_name, last_name, middle_name, position_id, department_id,
            employee_number, phone, email, hire_date
          ) VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9)
        `, [
          employee.first_name,
          employee.last_name,
          employee.middle_name,
          positionId,
          departmentId,
          employee.employee_number,
          employee.phone,
          employee.email,
          employee.hire_date
        ]);

        console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω —Å–æ—Ç—Ä—É–¥–Ω–∏–∫: ${employee.last_name} ${employee.first_name} (${employee.position})`);
        successCount++;

      } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ ${employee.last_name}:`, error.message);
        errorCount++;
      }
    }

    console.log('\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è:');
    console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ: ${successCount} —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤`);
    console.log(`‚ùå –û—à–∏–±–æ–∫: ${errorCount}`);
    console.log(`üìù –í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${employees.length} –∑–∞–ø–∏—Å–µ–π`);

  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
  } finally {
    await pool.end();
  }
}

seedEmployees();







