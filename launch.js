#!/usr/bin/env node

const { spawn } = require('child_process');
const path = require('path');
const fs = require('fs');

console.log('üöÄ –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã SofanyCRM...\n');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞
function startProcess(name, command, args, cwd) {
    console.log(`üîÑ –ó–∞–ø—É—Å–∫ ${name}...`);
    
    const process = spawn(command, args, {
        cwd: cwd,
        stdio: 'inherit',
        shell: true
    });

    process.on('error', (error) => {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ ${name}:`, error.message);
    });

    process.on('exit', (code) => {
        console.log(`üìù ${name} –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –∫–æ–¥–æ–º ${code}`);
    });

    return process;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
function checkDependencies(dir, name) {
    const nodeModulesPath = path.join(dir, 'node_modules');
    if (!fs.existsSync(nodeModulesPath)) {
        console.log(`üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è ${name}...`);
        const installProcess = spawn('npm', ['install'], {
            cwd: dir,
            stdio: 'inherit',
            shell: true
        });
        
        installProcess.on('exit', (code) => {
            if (code === 0) {
                console.log(`‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è ${name} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã`);
            } else {
                console.error(`‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è ${name}`);
            }
        });
        
        return installProcess;
    }
    return null;
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async function main() {
    const projectRoot = __dirname;
    const serverDir = path.join(projectRoot, 'server');
    const clientDir = path.join(projectRoot, 'client');

    console.log('üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...\n');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞
    const serverInstall = checkDependencies(serverDir, '—Å–µ—Ä–≤–µ—Ä–∞');
    if (serverInstall) {
        await new Promise(resolve => serverInstall.on('exit', resolve));
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∫–ª–∏–µ–Ω—Ç–∞
    const clientInstall = checkDependencies(clientDir, '–∫–ª–∏–µ–Ω—Ç–∞');
    if (clientInstall) {
        await new Promise(resolve => clientInstall.on('exit', resolve));
    }

    console.log('\nüöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤...\n');

    // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
    const serverProcess = startProcess('–°–µ—Ä–≤–µ—Ä', 'npm', ['run', 'dev'], serverDir);

    // –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
    await new Promise(resolve => setTimeout(resolve, 3000));

    // –ó–∞–ø—É—Å–∫–∞–µ–º –∫–ª–∏–µ–Ω—Ç
    const clientProcess = startProcess('–ö–ª–∏–µ–Ω—Ç', 'npm', ['start'], clientDir);

    console.log('\n‚úÖ –°–∏—Å—Ç–µ–º–∞ –∑–∞–ø—É—â–µ–Ω–∞!');
    console.log('üåê –°–µ—Ä–≤–µ—Ä: http://localhost:5000');
    console.log('üåê –ö–ª–∏–µ–Ω—Ç: http://localhost:3000');
    console.log('üìù –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C\n');

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    process.on('SIGINT', () => {
        console.log('\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã...');
        serverProcess.kill();
        clientProcess.kill();
        process.exit(0);
    });

    // –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
    await Promise.all([
        new Promise(resolve => serverProcess.on('exit', resolve)),
        new Promise(resolve => clientProcess.on('exit', resolve))
    ]);
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
main().catch(console.error);
