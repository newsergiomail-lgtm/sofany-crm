const fs = require('fs');
const path = require('path');
const { execSync } = require('child_process');

console.log('üî• –£–õ–¨–¢–ò–ú–ê–¢–ò–í–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–†–û–ë–õ–ï–ú –° –ö–≠–®–ï–ú...');

// 1. –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –∫—ç—à–µ–π
console.log('1. –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –∫—ç—à–µ–π...');

// Webpack cache
const webpackCachePath = path.resolve(__dirname, 'node_modules/.cache');
if (fs.existsSync(webpackCachePath)) {
  fs.rmSync(webpackCachePath, { recursive: true, force: true });
  console.log('‚úÖ Webpack cache –æ—á–∏—â–µ–Ω');
}

// Build –ø–∞–ø–∫–∞
const buildPath = path.resolve(__dirname, 'build');
if (fs.existsSync(buildPath)) {
  fs.rmSync(buildPath, { recursive: true, force: true });
  console.log('‚úÖ Build –ø–∞–ø–∫–∞ –æ—á–∏—â–µ–Ω–∞');
}

// ESLint cache
const eslintCachePath = path.resolve(__dirname, '.eslintcache');
if (fs.existsSync(eslintCachePath)) {
  fs.unlinkSync(eslintCachePath);
  console.log('‚úÖ ESLint cache –æ—á–∏—â–µ–Ω');
}

// 2. –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
console.log('2. –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤...');

const tempFiles = [
  '.DS_Store',
  'Thumbs.db',
  '*.tmp',
  '*.temp',
  '*.log'
];

tempFiles.forEach(pattern => {
  try {
    const files = require('glob').sync(pattern, { cwd: __dirname });
    files.forEach(file => {
      try {
        fs.unlinkSync(path.resolve(__dirname, file));
        console.log(`‚úÖ –£–¥–∞–ª–µ–Ω temp —Ñ–∞–π–ª: ${file}`);
      } catch (error) {
        // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏
      }
    });
  } catch (error) {
    // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏
  }
});

// 3. –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ webpack.config.js —Å –ø—Ä–æ–∑—Ä–∞—á–Ω—ã–º–∏ –∫–∞—Ä—Ç–∞–º–∏
console.log('3. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ webpack –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...');

const webpackConfig = `const path = require('path');

module.exports = {
  mode: 'development',
  devtool: 'source-map', // –ü—Ä–æ–∑—Ä–∞—á–Ω—ã–µ –∫–∞—Ä—Ç—ã –¥–ª—è Safari
  output: {
    clean: true,
    devtoolModuleFilenameTemplate: info =>
      \`webpack:///\${info.resourcePath}\${info.loaders ? \`?\${info.loaders}\` : ''}\`,
  },
  resolve: {
    alias: {
      '@': path.resolve(__dirname, 'src'),
    },
  },
  module: {
    rules: [
      // –ü–æ–¥—Ö–≤–∞—Ç—ã–≤–∞–µ–º –∫–∞—Ä—Ç—ã –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å—Ç–∞–¥–∏–π (TS/Babel)
      { 
        test: /\\.[jt]s$/, 
        use: ['source-map-loader'], 
        enforce: 'pre' 
      },
      {
        test: /\\.js$/,
        exclude: /node_modules/,
        use: {
          loader: 'babel-loader',
          options: {
            presets: ['@babel/preset-env', '@babel/preset-react'],
            plugins: [
              '@babel/plugin-proposal-class-properties',
              '@babel/plugin-syntax-dynamic-import'
            ]
          }
        }
      }
    ]
  },
  optimization: {
    splitChunks: {
      chunks: 'all',
      cacheGroups: {
        vendor: {
          test: /[\\\\/]node_modules[\\\\/]/,
          name: 'vendors',
          chunks: 'all',
        },
      },
    },
  },
  devServer: {
    hot: true,
    historyApiFallback: true,
    static: {
      directory: path.join(__dirname, 'public'),
    },
    compress: true,
    port: 3000,
  },
};`;

fs.writeFileSync(path.resolve(__dirname, 'webpack.config.js'), webpackConfig);
console.log('‚úÖ Webpack –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞');

// 4. –°–æ–∑–¥–∞–Ω–∏–µ .babelrc –¥–ª—è –ª—É—á—à–µ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
console.log('4. –°–æ–∑–¥–∞–Ω–∏–µ .babelrc...');

const babelConfig = {
  "presets": [
    ["@babel/preset-env", {
      "targets": {
        "browsers": ["last 2 versions", "ie >= 11"]
      }
    }],
    "@babel/preset-react"
  ],
  "plugins": [
    "@babel/plugin-proposal-class-properties",
    "@babel/plugin-syntax-dynamic-import"
  ]
};

fs.writeFileSync(path.resolve(__dirname, '.babelrc'), JSON.stringify(babelConfig, null, 2));
console.log('‚úÖ .babelrc —Å–æ–∑–¥–∞–Ω');

// 5. –°–æ–∑–¥–∞–Ω–∏–µ .eslintrc.js –¥–ª—è –ª—É—á—à–µ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
console.log('5. –°–æ–∑–¥–∞–Ω–∏–µ .eslintrc.js...');

const eslintConfig = `module.exports = {
  extends: [
    'react-app',
    'react-app/jest'
  ],
  rules: {
    'no-unused-vars': 'warn',
    'no-console': 'warn',
    'no-debugger': 'warn'
  },
  settings: {
    'import/resolver': {
      'webpack': {
        'config': './webpack.config.js'
      }
    }
  }
};`;

fs.writeFileSync(path.resolve(__dirname, '.eslintrc.js'), eslintConfig);
console.log('‚úÖ .eslintrc.js —Å–æ–∑–¥–∞–Ω');

// 6. –°–æ–∑–¥–∞–Ω–∏–µ .gitignore –¥–ª—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
console.log('6. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ .gitignore...');

const gitignoreContent = `# Dependencies
node_modules/
/.pnp
.pnp.js

# Testing
/coverage

# Production
/build

# Misc
.DS_Store
.env.local
.env.development.local
.env.test.local
.env.production.local

# Logs
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/

# nyc test coverage
.nyc_output

# Grunt intermediate storage
.grunt

# Bower dependency directory
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons
build/Release

# Dependency directories
node_modules/
jspm_packages/

# Optional npm cache directory
.npm

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env

# parcel-bundler cache
.cache
.parcel-cache

# next.js build output
.next

# nuxt.js build output
.nuxt

# vuepress build output
.vuepress/dist

# Serverless directories
.serverless

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# TernJS port file
.tern-port

# Stores VSCode versions used for testing VSCode extensions
.vscode-test

# Webpack cache
node_modules/.cache/

# ESLint cache
.eslintcache

# Temporary files
*.tmp
*.temp
*.log

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db
`;

fs.writeFileSync(path.resolve(__dirname, '.gitignore'), gitignoreContent);
console.log('‚úÖ .gitignore –æ–±–Ω–æ–≤–ª–µ–Ω');

// 7. –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ source maps
console.log('7. –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏...');

const checkSourceMapsScript = `const fs = require('fs');
const path = require('path');

console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ source maps...');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º build –ø–∞–ø–∫—É
const buildPath = path.resolve(__dirname, 'build');
if (fs.existsSync(buildPath)) {
  console.log('‚úÖ Build –ø–∞–ø–∫–∞ –Ω–∞–π–¥–µ–Ω–∞');
  
  // –ò—â–µ–º .map —Ñ–∞–π–ª—ã
  const findMapFiles = (dir) => {
    const files = fs.readdirSync(dir);
    const mapFiles = [];
    
    files.forEach(file => {
      const filePath = path.join(dir, file);
      const stat = fs.statSync(filePath);
      
      if (stat.isDirectory()) {
        mapFiles.push(...findMapFiles(filePath));
      } else if (file.endsWith('.map')) {
        mapFiles.push(filePath);
      }
    });
    
    return mapFiles;
  };
  
  const mapFiles = findMapFiles(buildPath);
  console.log(\`üìä –ù–∞–π–¥–µ–Ω–æ \${mapFiles.length} source map —Ñ–∞–π–ª–æ–≤\`);
  
  mapFiles.forEach(file => {
    const relativePath = path.relative(buildPath, file);
    console.log(\`  - \${relativePath}\`);
  });
  
} else {
  console.log('‚ùå Build –ø–∞–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
}

console.log('üéâ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
`;

fs.writeFileSync(path.resolve(__dirname, 'check-sourcemaps.js'), checkSourceMapsScript);
console.log('‚úÖ –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–∑–¥–∞–Ω');

console.log('üéâ –£–õ–¨–¢–ò–ú–ê–¢–ò–í–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!');
console.log('üìù –í—Å–µ –∫—ç—à–∏ –æ—á–∏—â–µ–Ω—ã, –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞');
console.log('üöÄ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å: npm start');
console.log('üîç –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ source maps: node check-sourcemaps.js');




